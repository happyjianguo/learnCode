<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yufu.fs.dao.ClearUnMerStlBookMapper">
  <resultMap id="BaseResultMap" type="cn.yufu.fs.entity.ClearUnMerStlBook">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="GEN_DT" jdbcType="VARCHAR" property="genDt" />
    <result column="MER_NO" jdbcType="VARCHAR" property="merNo" />
    <result column="MER_NAME" jdbcType="VARCHAR" property="merName" />
    <result column="LASTSTL_DATE" jdbcType="VARCHAR" property="laststlDate" />
    <result column="STARTUNSTL_DATE" jdbcType="VARCHAR" property="startunstlDate" />
    <result column="ENDUNSTL_DATE" jdbcType="VARCHAR" property="endunstlDate" />
    <result column="TRAN_NUM" jdbcType="DECIMAL" property="tranNum" />
    <result column="TRAN_AMT" jdbcType="DECIMAL" property="tranAmt" />
    <result column="COMMENTS" jdbcType="VARCHAR" property="comments" />
    <result column="stl_Need_Flag" jdbcType="VARCHAR" property="stlNeedFlag" />
   
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, GEN_DT, MER_NO, MER_NAME, LASTSTL_DATE, STARTUNSTL_DATE, ENDUNSTL_DATE, TRAN_NUM, 
    round(TRAN_AMT,2) as TRAN_AMT, COMMENTS, stl_Need_Flag
  </sql>
  <select id="selectByExample" parameterType="cn.yufu.fs.entity.ClearUnMerStlBookExample" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      example.distinct
    </if>
    <include refid="Base_Column_List" />
    from T_CLEAR_UN_MERSTL_BOOK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_CLEAR_UN_MERSTL_BOOK
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from T_CLEAR_UN_MERSTL_BOOK
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yufu.fs.entity.ClearUnMerStlBookExample">
    delete from T_CLEAR_UN_MERSTL_BOOK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yufu.fs.entity.ClearUnMerStlBook">
    insert into T_CLEAR_UN_MERSTL_BOOK (ID, GEN_DT, MER_NO, 
      MER_NAME, LASTSTL_DATE, STARTUNSTL_DATE, 
      ENDUNSTL_DATE, TRAN_NUM, TRAN_AMT, 
      COMMENTS, stl_Need_Flag )
    values (#{id,jdbcType=VARCHAR}, #{genDt,jdbcType=VARCHAR}, #{merNo,jdbcType=VARCHAR}, 
      #{merName,jdbcType=VARCHAR}, #{laststlDate,jdbcType=VARCHAR}, #{startunstlDate,jdbcType=VARCHAR}, 
      #{endunstlDate,jdbcType=VARCHAR}, #{tranNum,jdbcType=DECIMAL}, #{tranAmt,jdbcType=DECIMAL}, 
      #{comments,jdbcType=VARCHAR},#{stlNeedFlag,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.yufu.fs.entity.ClearUnMerStlBook">
    insert into T_CLEAR_UN_MERSTL_BOOK
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="genDt != null">
        GEN_DT,
      </if>
      <if test="merNo != null">
        MER_NO,
      </if>
      <if test="merName != null">
        MER_NAME,
      </if>
      <if test="laststlDate != null">
        LASTSTL_DATE,
      </if>
      <if test="startunstlDate != null">
        STARTUNSTL_DATE,
      </if>
      <if test="endunstlDate != null">
        ENDUNSTL_DATE,
      </if>
      <if test="tranNum != null">
        TRAN_NUM,
      </if>
      <if test="tranAmt != null">
        TRAN_AMT,
      </if>
      <if test="comments != null">
        COMMENTS,
      </if>
        
      <if test="stlNeedFlag != null">
        stlNeedFlag,
      </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="genDt != null">
        #{genDt,jdbcType=VARCHAR},
      </if>
      <if test="merNo != null">
        #{merNo,jdbcType=VARCHAR},
      </if>
      <if test="merName != null">
        #{merName,jdbcType=VARCHAR},
      </if>
      <if test="laststlDate != null">
        #{laststlDate,jdbcType=VARCHAR},
      </if>
      <if test="startunstlDate != null">
        #{startunstlDate,jdbcType=VARCHAR},
      </if>
      <if test="endunstlDate != null">
        #{endunstlDate,jdbcType=VARCHAR},
      </if>
      <if test="tranNum != null">
        #{tranNum,jdbcType=DECIMAL},
      </if>
      <if test="tranAmt != null">
        #{tranAmt,jdbcType=DECIMAL},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=VARCHAR},
      </if>
       <if test="stlNeedFlag != null">
        #{stlNeedFlag,jdbcType=VARCHAR},
      </if>
     
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yufu.fs.entity.ClearUnMerStlBookExample" resultType="java.lang.Integer">
    select count(*) from T_CLEAR_UN_MERSTL_BOOK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update T_CLEAR_UN_MERSTL_BOOK
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.genDt != null">
        GEN_DT = #{record.genDt,jdbcType=VARCHAR},
      </if>
      <if test="record.merNo != null">
        MER_NO = #{record.merNo,jdbcType=VARCHAR},
      </if>
      <if test="record.merName != null">
        MER_NAME = #{record.merName,jdbcType=VARCHAR},
      </if>
      <if test="record.laststlDate != null">
        LASTSTL_DATE = #{record.laststlDate,jdbcType=VARCHAR},
      </if>
      <if test="record.startunstlDate != null">
        STARTUNSTL_DATE = #{record.startunstlDate,jdbcType=VARCHAR},
      </if>
      <if test="record.endunstlDate != null">
        ENDUNSTL_DATE = #{record.endunstlDate,jdbcType=VARCHAR},
      </if>
      <if test="record.tranNum != null">
        TRAN_NUM = #{record.tranNum,jdbcType=DECIMAL},
      </if>
      <if test="record.tranAmt != null">
        TRAN_AMT = #{record.tranAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.comments != null">
        COMMENTS = #{record.comments,jdbcType=VARCHAR},
      </if>
       <if test="record.stlNeedFlag != null">
         stl_Need_Flag = #{stlNeedFlag,jdbcType=VARCHAR},
      </if>
    
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update T_CLEAR_UN_MERSTL_BOOK
    set ID = #{record.id,jdbcType=VARCHAR},
      GEN_DT = #{record.genDt,jdbcType=VARCHAR},
      MER_NO = #{record.merNo,jdbcType=VARCHAR},
      MER_NAME = #{record.merName,jdbcType=VARCHAR},
      LASTSTL_DATE = #{record.laststlDate,jdbcType=VARCHAR},
      STARTUNSTL_DATE = #{record.startunstlDate,jdbcType=VARCHAR},
      ENDUNSTL_DATE = #{record.endunstlDate,jdbcType=VARCHAR},
      TRAN_NUM = #{record.tranNum,jdbcType=DECIMAL},
      TRAN_AMT = #{record.tranAmt,jdbcType=DECIMAL},
      COMMENTS = #{record.comments,jdbcType=VARCHAR},
      stl_Need_Flag = #{record.stlNeedFlag,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yufu.fs.entity.ClearUnMerStlBook">
    update T_CLEAR_UN_MERSTL_BOOK
    <set>
      <if test="genDt != null">
        GEN_DT = #{genDt,jdbcType=VARCHAR},
      </if>
      <if test="merNo != null">
        MER_NO = #{merNo,jdbcType=VARCHAR},
      </if>
      <if test="merName != null">
        MER_NAME = #{merName,jdbcType=VARCHAR},
      </if>
      <if test="laststlDate != null">
        LASTSTL_DATE = #{laststlDate,jdbcType=VARCHAR},
      </if>
      <if test="startunstlDate != null">
        STARTUNSTL_DATE = #{startunstlDate,jdbcType=VARCHAR},
      </if>
      <if test="endunstlDate != null">
        ENDUNSTL_DATE = #{endunstlDate,jdbcType=VARCHAR},
      </if>
      <if test="tranNum != null">
        TRAN_NUM = #{tranNum,jdbcType=DECIMAL},
      </if>
      <if test="tranAmt != null">
        TRAN_AMT = #{tranAmt,jdbcType=DECIMAL},
      </if>
      <if test="comments != null">
        COMMENTS = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="stlNeedFlag != null">
         stl_Need_Flag = #{stlNeedFlag,jdbcType=VARCHAR},
      </if>
      
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yufu.fs.entity.ClearUnMerStlBook">
    update T_CLEAR_UN_MERSTL_BOOK
    set GEN_DT = #{genDt,jdbcType=VARCHAR},
      MER_NO = #{merNo,jdbcType=VARCHAR},
      MER_NAME = #{merName,jdbcType=VARCHAR},
      LASTSTL_DATE = #{laststlDate,jdbcType=VARCHAR},
      STARTUNSTL_DATE = #{startunstlDate,jdbcType=VARCHAR},
      ENDUNSTL_DATE = #{endunstlDate,jdbcType=VARCHAR},
      TRAN_NUM = #{tranNum,jdbcType=DECIMAL},
      TRAN_AMT = #{tranAmt,jdbcType=DECIMAL},
      COMMENTS = #{comments,jdbcType=VARCHAR},
      stl_Need_Flag = #{stlNeedFlag,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectPageByExample" parameterType="map" resultMap="BaseResultMap">
		SELECT * FROM (
		SELECT a.*, ROWNUM rn FROM(
		select
		<if test="example.distinct">
			example.distinct
		</if>
		<include refid="Base_Column_List" />
		from T_CLEAR_UN_MERSTL_BOOK
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by ${example.orderByClause}
		</if>)
		a
		WHERE <![CDATA[ ROWNUM <= ${endResult} ]]>)
		WHERE rn &gt; ${startResult}
  </select>
  
  <select id="getSumAmtByExample" parameterType="cn.yufu.fs.entity.ClearUnMerStlBookExample" resultType="java.lang.String">
	select to_char(sum(tran_amt),'fm999999999999990.90')|| '#' || sum(tran_num)  as fee from t_clear_un_merstl_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>    
  
</mapper>