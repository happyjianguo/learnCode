<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yufupos.system.modules.pos.dao.PSimDao">
    
	<sql id="pSimColumns">
		a.id AS "id",
		a.sim_communication AS "simCommunication",
		a.phone_number AS "phoneNumber",
		a.serial_number AS "serialNumber",
		a.sim_status AS "simStatus",
		a.pos_sn AS "posSn",
		a.purchase_date AS "purchaseDate",
		a.purchase_by AS "purchaseBy",
		a.instock_date AS "instockDate",
		a.instock_by AS "instockBy",
		a.instock_batch AS "instockBatch",
		a.outstock_date AS "outstockDate",
		a.outstock_by AS "outstockBy",
		a.install_date AS "installDate",
		a.install_by AS "installBy",
		a.repair_date AS "repairDate",
		a.repair_by AS "repairBy",
		a.repair_before_status AS "repairBeforeStatus",
		a.repair_remarks as "repairRemarks",		
		a.scrapped_date AS "scrappedDate",
		a.scrapped_by AS "scrappedBy",
		a.scrapped_remarks as "scrappedRemarks",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.SIM_DEPOSIT AS "simDeposit"
	</sql>
	
	<sql id="pSimJoins">
	</sql>
    
	<select id="get" resultType="PSim">
		SELECT 
			<include refid="pSimColumns"/>
		FROM p_sim a
		<include refid="pSimJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="PSim">
		SELECT 
			<include refid="pSimColumns"/>
		FROM p_sim a
		<include refid="pSimJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="simCommunication != null and simCommunication != ''">
				AND a.sim_communication = #{simCommunication}
			</if>
			<if test="phoneNumber != null and phoneNumber != ''">
				AND a.phone_number LIKE 
					<if test="dbName == 'oracle'">'%'||#{phoneNumber}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{phoneNumber}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{phoneNumber},'%')</if>
			</if>
			<if test="serialNumber != null and serialNumber != ''">
				AND a.serial_number LIKE 
					<if test="dbName == 'oracle'">'%'||#{serialNumber}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{serialNumber}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{serialNumber},'%')</if>
			</if>
			<if test="simStatus != null and simStatus != ''">
				AND a.sim_status = #{simStatus}
			</if>
			<if test="posSn != null and posSn != ''">
				AND a.pos_sn LIKE 
					<if test="dbName == 'oracle'">'%'||#{posSn}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{posSn}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{posSn},'%')</if>
			</if>
			<if test="purchaseDate != null and purchaseDate != ''">
				AND a.purchase_date = #{purchaseDate}
			</if>
			<if test="purchaseBy != null and purchaseBy != ''">
				AND a.purchase_by LIKE 
					<if test="dbName == 'oracle'">'%'||#{purchaseBy}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{purchaseBy}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{purchaseBy},'%')</if>
			</if>
			<if test="queryPurchaseByName != null">
				AND a.purchase_by IN
		    	<foreach collection="queryPurchaseByName" item="purchaseBy" index="index"
			        open="(" close=")" separator=",">
			        #{purchaseBy.id}
		    	</foreach>
			</if>
			<if test="instockDate != null and instockDate != ''">
				AND a.instock_date = #{instockDate}
			</if>
			<if test="instockBy != null and instockBy != ''">
				AND a.instock_by LIKE 
					<if test="dbName == 'oracle'">'%'||#{instockBy}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{instockBy}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{instockBy},'%')</if>
			</if>
			<if test="instockBatch != null and instockBatch != ''">
				AND a.instock_batch LIKE 
					<if test="dbName == 'oracle'">'%'||#{instockBatch}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{instockBatch}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{instockBatch},'%')</if>
			</if>
			<if test="outstockDate != null and outstockDate != ''">
				AND a.outstock_date = #{outstockDate}
			</if>
			<if test="outstockBy != null and outstockBy != ''">
				AND a.outstock_by LIKE 
					<if test="dbName == 'oracle'">'%'||#{outstockBy}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{outstockBy}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{outstockBy},'%')</if>
			</if>
			<if test="installDate != null and installDate != ''">
				AND a.install_date = #{installDate}
			</if>
			<if test="installBy != null and installBy != ''">
				AND a.install_by LIKE 
					<if test="dbName == 'oracle'">'%'||#{installBy}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{installBy}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{installBy},'%')</if>
			</if>
			<if test="repairDate != null and repairDate != ''">
				AND a.repair_date = #{repairDate}
			</if>
			<if test="repairBy != null and repairBy != ''">
				AND a.repair_by LIKE 
					<if test="dbName == 'oracle'">'%'||#{repairBy}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{repairBy}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{repairBy},'%')</if>
			</if>
			<if test="scrappedDate != null and scrappedDate != ''">
				AND a.scrapped_date = #{scrappedDate}
			</if>
			<if test="scrappedBy != null and scrappedBy != ''">
				AND a.scrapped_by LIKE 
					<if test="dbName == 'oracle'">'%'||#{scrappedBy}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{scrappedBy}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{scrappedBy},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PSim">
		SELECT 
			<include refid="pSimColumns"/>
		FROM p_sim a
		<include refid="pSimJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO p_sim(
			id,
			sim_communication,
			phone_number,
			serial_number,
			sim_status,
			pos_sn,
			purchase_date,
			purchase_by,
			instock_date,
			instock_by,
			instock_batch,
			outstock_date,
			outstock_by,
			install_date,
			install_by,
			repair_date,
			repair_by,
			scrapped_date,
			scrapped_by,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			SIM_DEPOSIT
		) VALUES (
			SEQ_P_SIM.Nextval,
			#{simCommunication},
			#{phoneNumber},
			#{serialNumber},
			#{simStatus},
			#{posSn},
			#{purchaseDate},
			#{purchaseBy},
			#{instockDate},
			#{instockBy},
			#{instockBatch},
			#{outstockDate},
			#{outstockBy},
			#{installDate},
			#{installBy},
			#{repairDate},
			#{repairBy},
			#{scrappedDate},
			#{scrappedBy},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{simDeposit}
		)
	</insert>
	
	<update id="update">
		UPDATE p_sim SET 	
			sim_communication = #{simCommunication},
			phone_number = #{phoneNumber},
			serial_number = #{serialNumber},
			sim_status = #{simStatus},
			pos_sn = #{posSn},
			purchase_date = #{purchaseDate},
			purchase_by = #{purchaseBy},
			instock_date = #{instockDate},
			instock_by = #{instockBy},
			instock_batch = #{instockBatch},
			outstock_date = #{outstockDate},
			outstock_by = #{outstockBy},
			install_date = #{installDate},
			install_by = #{installBy},
			repair_date = #{repairDate},
			repair_by = #{repairBy},
			scrapped_date = #{scrappedDate},
			scrapped_by = #{scrappedBy},
			remarks = #{remarks},
			repair_before_status = #{repairBeforeStatus},
			repair_remarks = #{repairRemarks},
			scrapped_remarks = #{scrappedRemarks},
			SIM_DEPOSIT = #{simDeposit}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE p_sim SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<select id="findPosSim" resultType="PSim">
		select a.pos_sn as "posSn", b.id as "id", b.sim_status as "simStatus"
		  from p_pos a
		  left join p_sim b
		    on a.pos_sn = b.pos_sn
		   and b.del_flag = '0'
		   WHERE  a.del_flag = '0' AND a.pos_status != 'SCRAP'	
		    AND  a.pos_status != 'MALFUNC' 
			<if test="posSn != null and posSn != ''">
				AND a.pos_sn= #{posSn}
			</if>

	</select>	
	
	<select id="findSimSum" resultType="PSim">
		select count(*) as "phoneNumber",
		       t.sim_communication as "simCommunication",
		       t.sim_status as "simStatus"
		  from p_sim t
		 where t.del_flag = '0'
			<if test="simCommunication != null and simCommunication != ''">
				AND t.sim_communication = #{simCommunication}
			</if>
		 group by t.sim_communication, t.sim_status
		 order by t.sim_communication, t.sim_status

	</select>		
	
	<update id="disablePSim">
		UPDATE p_sim SET 
			sim_status = #{simStatus},
			scrapped_date = #{scrappedDate},
			scrapped_by = #{scrappedBy},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="usablePSim">
		UPDATE p_sim SET 	
			sim_status = #{simStatus},
			pos_sn = #{posSn},
			outstock_date = #{outstockDate},
			outstock_by = #{outstockBy},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
</mapper>