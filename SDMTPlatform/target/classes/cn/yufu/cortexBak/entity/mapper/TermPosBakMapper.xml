<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yufu.cortexBak.dao.TermPosBakMapper">
  <resultMap id="BaseResultMap" type="cn.yufu.cortexBak.entity.TermPosBak">
    <result column="VERNO_CTX" jdbcType="DECIMAL" property="vernoCtx" />
    <result column="ID" jdbcType="DECIMAL" property="id" />
    <result column="TYPEID" jdbcType="DECIMAL" property="typeid" />
    <result column="TERMCODE" jdbcType="VARCHAR" property="termcode" />
    <result column="TESTFLAG" jdbcType="DECIMAL" property="testflag" />
    <result column="STATUSID" jdbcType="DECIMAL" property="statusid" />
    <result column="CURRCODE" jdbcType="CHAR" property="currcode" />
    <result column="TERMNO" jdbcType="DECIMAL" property="termno" />
    <result column="LOCATION" jdbcType="VARCHAR" property="location" />
    <result column="CONACCNO" jdbcType="VARCHAR" property="conaccno" />
    <result column="CONCUR" jdbcType="CHAR" property="concur" />
    <result column="POSCHIC" jdbcType="CHAR" property="poschic" />
    <result column="POSCHAC" jdbcType="CHAR" property="poschac" />
    <result column="POSCRC" jdbcType="CHAR" property="poscrc" />
    <result column="POSOE" jdbcType="CHAR" property="posoe" />
    <result column="POSCDOC" jdbcType="CHAR" property="poscdoc" />
    <result column="POSTOC" jdbcType="CHAR" property="postoc" />
    <result column="POSPCC" jdbcType="CHAR" property="pospcc" />
    <result column="TIMEZONE" jdbcType="VARCHAR" property="timezone" />
    <result column="CAT_PARAMS" jdbcType="VARCHAR" property="catParams" />
    <result column="MERCHANT_ID" jdbcType="DECIMAL" property="merchantId" />
    <result column="TERMTYPE" jdbcType="CHAR" property="termtype" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    VERNO_CTX, ID, TYPEID, TERMCODE, TESTFLAG, STATUSID, CURRCODE, TERMNO, LOCATION, 
    CONACCNO, CONCUR, POSCHIC, POSCHAC, POSCRC, POSOE, POSCDOC, POSTOC, POSPCC, TIMEZONE, 
    CAT_PARAMS, MERCHANT_ID, TERMTYPE
  </sql>
  <select id="selectByExample" parameterType="cn.yufu.cortexBak.entity.TermPosBakExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TERMPOS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByTermcode" parameterType="cn.yufu.cortexBak.entity.TermPosBak" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from TERMPOS
    where TERMCODE = #{termcode}
  </select>
  <delete id="deleteByExample" parameterType="cn.yufu.cortexBak.entity.TermPosBakExample">
    delete from TERMPOS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yufu.cortexBak.entity.TermPosBak">
    insert into TERMPOS (VERNO_CTX, ID, TYPEID, 
      TERMCODE, TESTFLAG, STATUSID, 
      CURRCODE, TERMNO, LOCATION, 
      CONACCNO, CONCUR, POSCHIC, 
      POSCHAC, POSCRC, POSOE, POSCDOC, 
      POSTOC, POSPCC, TIMEZONE, 
      CAT_PARAMS, MERCHANT_ID, TERMTYPE
      )
    values (#{vernoCtx,jdbcType=DECIMAL}, #{id,jdbcType=DECIMAL}, #{typeid,jdbcType=DECIMAL}, 
      #{termcode,jdbcType=VARCHAR}, #{testflag,jdbcType=DECIMAL}, #{statusid,jdbcType=DECIMAL}, 
      #{currcode,jdbcType=CHAR}, #{termno,jdbcType=DECIMAL}, #{location,jdbcType=VARCHAR}, 
      #{conaccno,jdbcType=VARCHAR}, #{concur,jdbcType=CHAR}, #{poschic,jdbcType=CHAR}, 
      #{poschac,jdbcType=CHAR}, #{poscrc,jdbcType=CHAR}, #{posoe,jdbcType=CHAR}, #{poscdoc,jdbcType=CHAR}, 
      #{postoc,jdbcType=CHAR}, #{pospcc,jdbcType=CHAR}, #{timezone,jdbcType=VARCHAR}, 
      #{catParams,jdbcType=VARCHAR}, #{merchantId,jdbcType=DECIMAL}, #{termtype,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.yufu.cortexBak.entity.TermPosBak">
    insert into TERMPOS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="vernoCtx != null">
        VERNO_CTX,
      </if>
      <if test="id != null">
        ID,
      </if>
      <if test="typeid != null">
        TYPEID,
      </if>
      <if test="termcode != null">
        TERMCODE,
      </if>
      <if test="testflag != null">
        TESTFLAG,
      </if>
      <if test="statusid != null">
        STATUSID,
      </if>
      <if test="currcode != null">
        CURRCODE,
      </if>
      <if test="termno != null">
        TERMNO,
      </if>
      <if test="location != null">
        LOCATION,
      </if>
      <if test="conaccno != null">
        CONACCNO,
      </if>
      <if test="concur != null">
        CONCUR,
      </if>
      <if test="poschic != null">
        POSCHIC,
      </if>
      <if test="poschac != null">
        POSCHAC,
      </if>
      <if test="poscrc != null">
        POSCRC,
      </if>
      <if test="posoe != null">
        POSOE,
      </if>
      <if test="poscdoc != null">
        POSCDOC,
      </if>
      <if test="postoc != null">
        POSTOC,
      </if>
      <if test="pospcc != null">
        POSPCC,
      </if>
      <if test="timezone != null">
        TIMEZONE,
      </if>
      <if test="catParams != null">
        CAT_PARAMS,
      </if>
      <if test="merchantId != null">
        MERCHANT_ID,
      </if>
      <if test="termtype != null">
        TERMTYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="vernoCtx != null">
        #{vernoCtx,jdbcType=DECIMAL},
      </if>
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=DECIMAL},
      </if>
      <if test="termcode != null">
        #{termcode,jdbcType=VARCHAR},
      </if>
      <if test="testflag != null">
        #{testflag,jdbcType=DECIMAL},
      </if>
      <if test="statusid != null">
        #{statusid,jdbcType=DECIMAL},
      </if>
      <if test="currcode != null">
        #{currcode,jdbcType=CHAR},
      </if>
      <if test="termno != null">
        #{termno,jdbcType=DECIMAL},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="conaccno != null">
        #{conaccno,jdbcType=VARCHAR},
      </if>
      <if test="concur != null">
        #{concur,jdbcType=CHAR},
      </if>
      <if test="poschic != null">
        #{poschic,jdbcType=CHAR},
      </if>
      <if test="poschac != null">
        #{poschac,jdbcType=CHAR},
      </if>
      <if test="poscrc != null">
        #{poscrc,jdbcType=CHAR},
      </if>
      <if test="posoe != null">
        #{posoe,jdbcType=CHAR},
      </if>
      <if test="poscdoc != null">
        #{poscdoc,jdbcType=CHAR},
      </if>
      <if test="postoc != null">
        #{postoc,jdbcType=CHAR},
      </if>
      <if test="pospcc != null">
        #{pospcc,jdbcType=CHAR},
      </if>
      <if test="timezone != null">
        #{timezone,jdbcType=VARCHAR},
      </if>
      <if test="catParams != null">
        #{catParams,jdbcType=VARCHAR},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=DECIMAL},
      </if>
      <if test="termtype != null">
        #{termtype,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yufu.cortexBak.entity.TermPosBakExample" resultType="java.lang.Integer">
    select count(*) from TERMPOS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update TERMPOS
    <set>
      <if test="record.vernoCtx != null">
        VERNO_CTX = #{record.vernoCtx,jdbcType=DECIMAL},
      </if>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.typeid != null">
        TYPEID = #{record.typeid,jdbcType=DECIMAL},
      </if>
      <if test="record.termcode != null">
        TERMCODE = #{record.termcode,jdbcType=VARCHAR},
      </if>
      <if test="record.testflag != null">
        TESTFLAG = #{record.testflag,jdbcType=DECIMAL},
      </if>
      <if test="record.statusid != null">
        STATUSID = #{record.statusid,jdbcType=DECIMAL},
      </if>
      <if test="record.currcode != null">
        CURRCODE = #{record.currcode,jdbcType=CHAR},
      </if>
      <if test="record.termno != null">
        TERMNO = #{record.termno,jdbcType=DECIMAL},
      </if>
      <if test="record.location != null">
        LOCATION = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.conaccno != null">
        CONACCNO = #{record.conaccno,jdbcType=VARCHAR},
      </if>
      <if test="record.concur != null">
        CONCUR = #{record.concur,jdbcType=CHAR},
      </if>
      <if test="record.poschic != null">
        POSCHIC = #{record.poschic,jdbcType=CHAR},
      </if>
      <if test="record.poschac != null">
        POSCHAC = #{record.poschac,jdbcType=CHAR},
      </if>
      <if test="record.poscrc != null">
        POSCRC = #{record.poscrc,jdbcType=CHAR},
      </if>
      <if test="record.posoe != null">
        POSOE = #{record.posoe,jdbcType=CHAR},
      </if>
      <if test="record.poscdoc != null">
        POSCDOC = #{record.poscdoc,jdbcType=CHAR},
      </if>
      <if test="record.postoc != null">
        POSTOC = #{record.postoc,jdbcType=CHAR},
      </if>
      <if test="record.pospcc != null">
        POSPCC = #{record.pospcc,jdbcType=CHAR},
      </if>
      <if test="record.timezone != null">
        TIMEZONE = #{record.timezone,jdbcType=VARCHAR},
      </if>
      <if test="record.catParams != null">
        CAT_PARAMS = #{record.catParams,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantId != null">
        MERCHANT_ID = #{record.merchantId,jdbcType=DECIMAL},
      </if>
      <if test="record.termtype != null">
        TERMTYPE = #{record.termtype,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update TERMPOS
    set VERNO_CTX = #{record.vernoCtx,jdbcType=DECIMAL},
      ID = #{record.id,jdbcType=DECIMAL},
      TYPEID = #{record.typeid,jdbcType=DECIMAL},
      TERMCODE = #{record.termcode,jdbcType=VARCHAR},
      TESTFLAG = #{record.testflag,jdbcType=DECIMAL},
      STATUSID = #{record.statusid,jdbcType=DECIMAL},
      CURRCODE = #{record.currcode,jdbcType=CHAR},
      TERMNO = #{record.termno,jdbcType=DECIMAL},
      LOCATION = #{record.location,jdbcType=VARCHAR},
      CONACCNO = #{record.conaccno,jdbcType=VARCHAR},
      CONCUR = #{record.concur,jdbcType=CHAR},
      POSCHIC = #{record.poschic,jdbcType=CHAR},
      POSCHAC = #{record.poschac,jdbcType=CHAR},
      POSCRC = #{record.poscrc,jdbcType=CHAR},
      POSOE = #{record.posoe,jdbcType=CHAR},
      POSCDOC = #{record.poscdoc,jdbcType=CHAR},
      POSTOC = #{record.postoc,jdbcType=CHAR},
      POSPCC = #{record.pospcc,jdbcType=CHAR},
      TIMEZONE = #{record.timezone,jdbcType=VARCHAR},
      CAT_PARAMS = #{record.catParams,jdbcType=VARCHAR},
      MERCHANT_ID = #{record.merchantId,jdbcType=DECIMAL},
      TERMTYPE = #{record.termtype,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>